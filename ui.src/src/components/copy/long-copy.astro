---
export interface Props {
    title?: boolean,
    reverse?: boolean,
    titleImportance?: string
}
const { title = false, reverse = false, titleImportance = "h2" } = Astro.props as Props;
const HeadingOpen = `<${titleImportance} class="font-title text-3xl md:text-5xl gradient-heading uppercase mb-4 md:mb-14">`;
const HeadingClose = `</${titleImportance}>`;
---
<script>
    import { gsap, Expo } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    gsap.registerPlugin(ScrollTrigger);
    
    document.addEventListener('DOMContentLoaded', () => {

        const elements = document.querySelectorAll('.lead-in-text');
        elements.forEach(el => {
            if (el.children.length == 0){
                return;
            }
            const titleTextEl = el.children[0] as HTMLElement;
            const textBlocks = titleTextEl.innerText.split(' ').filter(t => t);
            titleTextEl.innerHTML = '';
            titleTextEl.classList.add('flex', 'flex-wrap');
            if (el.classList.contains('reversed')){
                titleTextEl.classList.add('justify-end');
            }
            textBlocks.forEach(text => {
                const textEl = document.createElement('span') as HTMLSpanElement;
                const innerTextEl = document.createElement('span') as HTMLSpanElement;
                textEl.innerText = text;
                innerTextEl.innerText = text;
                textEl.classList.add('text', 'relative', 'overflow-hidden', 'text-transparent');
                innerTextEl.classList.add('absolute', 'top-0', 'left-0', 'translate-y-full', 'text-black');
                textEl.appendChild(innerTextEl);
                titleTextEl.appendChild(textEl);
                titleTextEl.appendChild(document.createTextNode('\u00A0'));

                gsap.to(gsap.utils.toArray(titleTextEl.querySelectorAll('span')), {
                    y: 0,
                    duration: 1,
                    stagger: 0.1,
                    ease: Expo.easeInOut,
                    scrollTrigger: {
                        trigger: textEl,
                        start: '0 bottom-=100'
                    }
                })
            })
        });

    });
</script>
<div class="my-12 first:mt-0 md:my-20 mx-auto max-w-4xl px-4 xl:px-0 md:grid grid-cols-12 gap-x-10">
    {title && <div class="col-span-12 -order-1">
        <Fragment set:html={HeadingOpen}></Fragment>
            <slot name="title" />
        <Fragment set:html={HeadingClose}></Fragment>
    </div>}
    <div class={`lead-in-text col-span-5 mb-2 ${reverse && 'reversed order-1 md:text-right'}`}>
        <slot name="lead-in" />
    </div>
    <div class={`col-span-7 ${reverse && 'order-0 '} font-body-alt space-y-4`}>
        <slot name="copy" />        
    </div>
</div> 